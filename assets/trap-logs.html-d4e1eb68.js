import{_ as n,o as s,c as a,a as e}from"./app-4f7908e3.js";const t="/assets/stylus-error-log-b7315de3.png",p={},o=e('<h1 id="踩坑日志" tabindex="-1"><a class="header-anchor" href="#踩坑日志" aria-hidden="true">#</a> 踩坑日志</h1><h2 id="webpack-loader踩坑" tabindex="-1"><a class="header-anchor" href="#webpack-loader踩坑" aria-hidden="true">#</a> webpack-loader踩坑</h2><h3 id="现象" tabindex="-1"><a class="header-anchor" href="#现象" aria-hidden="true">#</a> 现象</h3><p>先看一张图 <img src="'+t+`" alt="img"> stylus-loader在处理一段style-loader执行后的内容</p><h3 id="分析问题" tabindex="-1"><a class="header-anchor" href="#分析问题" aria-hidden="true">#</a> 分析问题</h3><p>首先了解一下关于stylus在wepback配置逻辑</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token operator">...</span>
<span class="token comment">// 常规的webpack optional配置</span>
<span class="token punctuation">{</span>
  <span class="token literal-property property">module</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token literal-property property">test</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.styl(us)?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>
        <span class="token literal-property property">use</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;vue-style-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;stylus-loader&#39;</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token operator">...</span>

<span class="token comment">// 我们的工程对外暴露的是webpack chain，我的本地配置如下</span>
<span class="token function-variable function">chainWebpack</span><span class="token operator">:</span> <span class="token parameter">config</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  config<span class="token punctuation">.</span>module
    <span class="token punctuation">.</span><span class="token function">rule</span><span class="token punctuation">(</span><span class="token string">&#39;stylus&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\.styl(us)?$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;vue-style-loader&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">loader</span><span class="token punctuation">(</span><span class="token string">&#39;vue-style-loader&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">loader</span><span class="token punctuation">(</span><span class="token string">&#39;css-loader&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">use</span><span class="token punctuation">(</span><span class="token string">&#39;stylus-loader&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">loader</span><span class="token punctuation">(</span><span class="token string">&#39;stylus-loader&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">.</span><span class="token function">end</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>看起来配置没问题，继续分析loader的逻辑: stylus-loader -&gt; css-loader -&gt; vue-style-loader(style-loader)；关于这部分的详细逻辑如下：</p><h4 id="stylus-loader" tabindex="-1"><a class="header-anchor" href="#stylus-loader" aria-hidden="true">#</a> stylus-loader</h4><ul><li>解析配置</li><li>实例化stylus对象</li><li>配置能力挂载到stylus实例上</li><li>进行一些import和依赖处理，初始化环境</li><li>styl.render(fn) （以下的流程走向了核心stylus）</li><li>render对象的parse方法</li><li>核心parse方法</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>- parse
- evaluate
- normalize
- compile
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>是从stylus-&gt;css的过程</p><h4 id="css-loader" tabindex="-1"><a class="header-anchor" href="#css-loader" aria-hidden="true">#</a> css-loader</h4><p>处理css中的import和url资源，将css资源包装成模块，方便后续的style-loader调用更新</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// Imports</span>
<span class="token keyword">var</span> ___CSS_LOADER_API_IMPORT___ <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;../node_modules/css-loader/dist/runtime/api.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">var</span> ___CSS_LOADER_EXPORT___ <span class="token operator">=</span> <span class="token function">___CSS_LOADER_API_IMPORT___</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">i</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token keyword">return</span> i<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Module</span>
___CSS_LOADER_EXPORT___<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>module<span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token string">&quot;\\n.app[data-v-5ef48958] {\\n    color: red;\\n}\\n&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Exports</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> ___CSS_LOADER_EXPORT___<span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="style-loader-vs-vue-style-loader" tabindex="-1"><a class="header-anchor" href="#style-loader-vs-vue-style-loader" aria-hidden="true">#</a> style-loader vs vue-style-loader</h4><p>本质是将css通过style标签插入到文档流里</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// style-loader: Adds some css to the DOM by adding a &lt;style&gt; tag</span>

<span class="token comment">// load the styles</span>
<span class="token keyword">var</span> content <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;!!../node_modules/css-loader/dist/cjs.js??ref--1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./app.vue?vue&amp;type=style&amp;index=0&amp;id=5ef48958&amp;scoped=true&amp;lang=css&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> content <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> content <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>module<span class="token punctuation">.</span>id<span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>content<span class="token punctuation">.</span>locals<span class="token punctuation">)</span> module<span class="token punctuation">.</span>exports <span class="token operator">=</span> content<span class="token punctuation">.</span>locals<span class="token punctuation">;</span>
<span class="token comment">// add the styles to the DOM</span>
<span class="token keyword">var</span> add <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;!../node_modules/vue-style-loader/lib/addStylesClient.js&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>default
<span class="token keyword">var</span> update <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token string">&quot;d929f8d0&quot;</span><span class="token punctuation">,</span> content<span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Hot Module Replacement</span>
<span class="token keyword">if</span><span class="token punctuation">(</span>module<span class="token punctuation">.</span>hot<span class="token punctuation">)</span> <span class="token punctuation">{</span>
 <span class="token comment">// When the styles change, update the &lt;style&gt; tags</span>
 <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span>content<span class="token punctuation">.</span>locals<span class="token punctuation">)</span> <span class="token punctuation">{</span>
   module<span class="token punctuation">.</span>hot<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span><span class="token string">&quot;!!../node_modules/css-loader/dist/cjs.js??ref--1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./app.vue?vue&amp;type=style&amp;index=0&amp;id=5ef48958&amp;scoped=true&amp;lang=css&amp;&quot;</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
     <span class="token keyword">var</span> newContent <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;!!../node_modules/css-loader/dist/cjs.js??ref--1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/vue-loader/lib/index.js??vue-loader-options!./app.vue?vue&amp;type=style&amp;index=0&amp;id=5ef48958&amp;scoped=true&amp;lang=css&amp;&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> newContent <span class="token operator">===</span> <span class="token string">&#39;string&#39;</span><span class="token punctuation">)</span> newContent <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>module<span class="token punctuation">.</span>id<span class="token punctuation">,</span> newContent<span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
     <span class="token function">update</span><span class="token punctuation">(</span>newContent<span class="token punctuation">)</span><span class="token punctuation">;</span>
   <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token punctuation">}</span>
 <span class="token comment">// When the module is disposed, remove the &lt;style&gt; tags</span>
 module<span class="token punctuation">.</span>hot<span class="token punctuation">.</span><span class="token function">dispose</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span> <span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>vue-style-loader folk自style-loader，保留了基本功能，例如详细的options没有继承，但是新增了ssr的style能力。所以需要<code>ssr</code>项目使用vue-style-loader，而其他项目保留style-loader，保留其配置的丰富性。</p><p>到这里应该很好理解为什么说报错里的内容是style-loader的结果，而为何再此被stylus-loader调用执行呢？这就要说到webpack-chain的机制了，也确实是我配置上踩了坑。</p><h4 id="webpack-chain" tabindex="-1"><a class="header-anchor" href="#webpack-chain" aria-hidden="true">#</a> webpack-chain</h4><p>chainMap &amp; chainSet，提供了一种链式调用的机制，并且会返回当前执行的结果给下一个use方法去执行，因此存在多次定义多次执行的可能</p><p>进而也就解释了为什么会在style-loader执行完以后还有stylus-loader执行其内容。此时，只需要将这个冗余的配置删除即可。</p><p>到这里我们的问题定位基本完成了，那么讲一些cube-ui的一些配置问题，这里提到了后编译概念，这里的原理和配置思路同步一下，方便大家参考同时掌握。</p><h3 id="后编译的思路" tabindex="-1"><a class="header-anchor" href="#后编译的思路" aria-hidden="true">#</a> 后编译的思路</h3><p>cube-ui的后编译概念，npm包随应用编译打包一块编译 es6代码直接被应用项目调用，减少无用的编译代码</p><ul><li>webpack-transform-modules-plugin</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token comment">// 后编译配置</span>
  <span class="token property">&quot;transformModules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;cube-ui&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;transform&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cube-ui/src/modules/\${member}&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;kebabCase&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// 普通编译配置</span>
  <span class="token property">&quot;transformModules&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;cube-ui&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token property">&quot;transform&quot;</span><span class="token operator">:</span> <span class="token string">&quot;cube-ui/lib/\${member}&quot;</span><span class="token punctuation">,</span>
      <span class="token property">&quot;kebabCase&quot;</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token property">&quot;style&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        <span class="token property">&quot;ignore&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;create-api&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;better-scroll&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;locale&quot;</span><span class="token punctuation">]</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>webpack-post-compile-plugin 后编译情况下子包的依赖分析 <ul><li>应用中package.json添加compileDependencies: [&quot;A&quot;, &quot;B&quot;]指定后编译的包</li></ul></li><li>babel-plugin-transform-modules 按需引入的处理 <ul><li>preventFullImport: true in .babelrc with normal import style</li></ul></li></ul><h2 id="vue-loader在干什么-很有意思" tabindex="-1"><a class="header-anchor" href="#vue-loader在干什么-很有意思" aria-hidden="true">#</a> vue-loader在干什么，很有意思</h2><p>怎么分析模板、script和css，以及如何引用</p>`,31),l=[o];function c(i,u){return s(),a("div",null,l)}const d=n(p,[["render",c],["__file","trap-logs.html.vue"]]);export{d as default};
