import{_ as i,o as a,c as l,a as e}from"./app-4f7908e3.js";const r={},t=e('<h1 id="如何写一个webpack插件" tabindex="-1"><a class="header-anchor" href="#如何写一个webpack插件" aria-hidden="true">#</a> 如何写一个webpack插件</h1><h2 id="理解plugin和loader的区别" tabindex="-1"><a class="header-anchor" href="#理解plugin和loader的区别" aria-hidden="true">#</a> 理解plugin和loader的区别</h2><ul><li>loader 针对文件的转换，也就是说匹配文件进行转化</li><li>plugin是扩展器，不直接操作文件，而是根据打包某些节点丰富构建打包的能力，更为广义的能力</li></ul><h2 id="webpack节点" tabindex="-1"><a class="header-anchor" href="#webpack节点" aria-hidden="true">#</a> webpack节点</h2><p>理解了是依据webpack打包的节点进行能力扩展，那么看下webpack的可扩展的节点有哪些</p><ul><li>entry-options</li><li>compile</li><li>make</li><li>build-module</li><li>after-compile</li><li>emit</li><li>after-emit</li></ul><h2 id="plugin的规范长什么样子呢" tabindex="-1"><a class="header-anchor" href="#plugin的规范长什么样子呢" aria-hidden="true">#</a> plugin的规范长什么样子呢</h2><ul><li>一个javascript对象或者Class</li><li>有apply方法</li><li>指定挂载webpack时间钩子</li><li>处理webpack内部实例的特定数据</li><li>功能完成要执行webapck的callback</li></ul><h2 id="tabable需要介绍" tabindex="-1"><a class="header-anchor" href="#tabable需要介绍" aria-hidden="true">#</a> tabable需要介绍</h2><p>链接插件和compiler，管理所有的插件绑定和调用 详细介绍这部分内容，是插件机制的核心</p><ul><li>plugin: 对等于eventEmitter的on</li><li>apply: 对apply插件的定义</li><li>applyPlugin: 对等于eventEmitter的emit，应用plugin的方法也有很多形式</li><li>mixin：tapable的原型扩展</li></ul><h2 id="那么compiler是什么呢" tabindex="-1"><a class="header-anchor" href="#那么compiler是什么呢" aria-hidden="true">#</a> 那么compiler是什么呢？</h2><p>compiler需要跟compilation区分着看</p><ul><li>compiler像是订制好的一个生产环境</li><li>compilation则是一次版本构建和资源产生，每次变化重新创建</li></ul><h2 id="compilation有什么用呢-这有什么hook可以用呢" tabindex="-1"><a class="header-anchor" href="#compilation有什么用呢-这有什么hook可以用呢" aria-hidden="true">#</a> compilation有什么用呢？这有什么Hook可以用呢？</h2>',15),o=[t];function c(n,p){return a(),l("div",null,o)}const d=i(r,[["render",c],["__file","how-to-write-plugin.html.vue"]]);export{d as default};
